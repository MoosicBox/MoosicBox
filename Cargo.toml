[workspace]
members = [
    "packages/aconverter",
    "packages/admin_htmx",
    "packages/app/models",
    "packages/app/native",
    "packages/app/native/bundled",
    "packages/app/native/image",
    "packages/app/native/ui",
    "packages/app/state",
    "packages/app/tauri/bundled",
    "packages/app/tauri/client",
    "packages/app/tauri/create_config",
    "packages/app/tauri/src-tauri",
    "packages/app/tauri/tauri-plugin-player",
    "packages/app/tauri/ws",
    "packages/arb",
    "packages/assert",
    "packages/async",
    "packages/async/cargo",
    "packages/async/examples/cancel",
    "packages/async/examples/simulated",
    "packages/async/macros",
    "packages/async_service",
    "packages/async_service/examples/basic_usage",
    "packages/audio_decoder",
    "packages/audio_decoder/examples/basic_decode",
    "packages/audio_encoder",
    "packages/audio_encoder/examples/basic_encoding",
    "packages/audio_output",
    "packages/audio_output/examples/list_devices",
    "packages/audio_zone",
    "packages/audio_zone/models",
    "packages/auth",
    "packages/bloaty",
    "packages/channel_utils",
    "packages/channel_utils/examples/prioritized_messaging",
    "packages/clippier",
    "packages/clippier/examples/feature_validation",
    "packages/config",
    "packages/database",
    "packages/database/examples/turso_basic",
    "packages/database/examples/turso_transactions",
    "packages/database_connection",
    "packages/date_utils",
    "packages/date_utils/examples/basic_usage",
    "packages/downloader",
    "packages/env",
    "packages/env_utils",
    "packages/files",
    "packages/fs",
    "packages/fs/examples/temp_dir",
    "packages/gpipe",
    "packages/gpipe/ast",
    "packages/http",
    "packages/http/examples/simple_get",
    "packages/http/models",
    "packages/hyperchad",
    "packages/hyperchad/actions",
    "packages/hyperchad/app",
    "packages/hyperchad/color",
    "packages/hyperchad/examples/details_summary",
    "packages/hyperchad/examples/http_events",
    "packages/hyperchad/examples/markdown",
    "packages/hyperchad/js_bundler",
    "packages/hyperchad/markdown",
    "packages/hyperchad/renderer",
    "packages/hyperchad/renderer/egui",
    "packages/hyperchad/renderer/fltk",
    "packages/hyperchad/renderer/html",
    "packages/hyperchad/renderer/html/actix",
    "packages/hyperchad/renderer/html/cdn",
    "packages/hyperchad/renderer/html/http",
    "packages/hyperchad/renderer/html/lambda",
    "packages/hyperchad/renderer/html/web_server",
    "packages/hyperchad/renderer/html/web_server/examples/basic_web_server",
    "packages/hyperchad/renderer/vanilla_js",
    "packages/hyperchad/renderer/vanilla_js/hash",
    "packages/hyperchad/router",
    "packages/hyperchad/simulator",
    "packages/hyperchad/state",
    "packages/hyperchad/template",
    "packages/hyperchad/template/actions_dsl",
    "packages/hyperchad/template/macros",
    "packages/hyperchad/test_utils",
    "packages/hyperchad/transformer",
    "packages/hyperchad/transformer/models",
    "packages/image",
    "packages/image/examples/basic_usage",
    "packages/json_utils",
    "packages/json_utils/examples/basic_conversion",
    "packages/library",
    "packages/library/models",
    "packages/library/music_api",
    "packages/load_balancer",
    "packages/load_balancer/examples/basic_routing",
    "packages/logging",
    "packages/logging/examples/basic_usage",
    "packages/marketing_site",
    "packages/marketing_site/ui",
    "packages/mdns",
    "packages/mdns/examples/service_discovery",
    "packages/mdns/examples/service_registration",
    "packages/menu",
    "packages/menu/models",
    "packages/middleware",
    "packages/moosicbox",
    "packages/music/models",
    "packages/music_api",
    "packages/music_api/api",
    "packages/music_api/helpers",
    "packages/music_api/models",
    "packages/openport",
    "packages/opus",
    "packages/opus_native",
    "packages/opus_native/libopus",
    "packages/opus_native/test_vectors",
    "packages/p2p",
    "packages/paging",
    "packages/paging/examples/basic_pagination",
    "packages/parsing_utils",
    "packages/parsing_utils/examples/basic_usage",
    "packages/player",
    "packages/profiles",
    "packages/qobuz",
    "packages/random",
    "packages/random/examples/basic_usage",
    "packages/remote_library",
    "packages/resampler",
    "packages/resampler/examples/basic_resampling",
    "packages/scan",
    "packages/scan/models",
    "packages/schema",
    "packages/search",
    "packages/search/examples/basic_usage",
    "packages/server",
    "packages/server/simulator",
    "packages/session",
    "packages/session/models",
    "packages/simvar",
    "packages/simvar/examples/api_testing",
    "packages/simvar/examples/basic_web_server",
    "packages/simvar/harness",
    "packages/simvar/utils",
    "packages/stream_utils",
    "packages/stream_utils/examples/basic_broadcast",
    "packages/stream_utils/examples/stalled_monitoring",
    "packages/stream_utils/examples/typed_stream",
    "packages/switchy",
    "packages/switchy/examples/basic_async",
    "packages/switchy/schema",
    "packages/switchy/schema/cli",
    "packages/switchy/schema/examples/basic_migration_test",
    "packages/switchy/schema/examples/basic_usage",
    "packages/switchy/schema/examples/borrowed_migrations",
    "packages/switchy/schema/examples/mutation_migration_test",
    "packages/switchy/schema/examples/state_migration_test",
    "packages/switchy/schema/examples/static_migrations",
    "packages/switchy/schema/test_utils",
    "packages/tcp",
    "packages/telemetry",
    "packages/tidal",
    "packages/time",
    "packages/tunnel",
    "packages/tunnel_sender",
    "packages/tunnel_server",
    "packages/upnp",
    "packages/upnp/examples/device_discovery",
    "packages/uuid",
    "packages/web_server",
    "packages/web_server/core",
    "packages/web_server/cors",
    "packages/web_server/examples/basic_handler",
    "packages/web_server/examples/basic_handler_standalone",
    "packages/web_server/examples/combined_extractors_standalone",
    "packages/web_server/examples/from_request_test",
    "packages/web_server/examples/handler_macro_test",
    "packages/web_server/examples/json_extractor_standalone",
    "packages/web_server/examples/nested_get",
    "packages/web_server/examples/openapi",
    "packages/web_server/examples/query_extractor_standalone",
    "packages/web_server/examples/simple_get",
    "packages/web_server/simulator",
    "packages/ws",
    "packages/ws/examples/basic_message_handler",
    "packages/yt",
]

resolver = "2"

[workspace.metadata.cargo-udeps.ignore]
normal = ["log", "moosicbox_assert", "moosicbox_env_utils", "moosicbox_logging"]

[workspace.metadata.cargo-machete]
ignored = [
    "log",
    "moosicbox_assert",
    "moosicbox_env_utils",
    "moosicbox_logging",
]

[profile.release]
codegen-units = 1
lto           = false
opt-level     = 3
strip         = "symbols"

[profile.debug-release]
debug    = true
inherits = "release"
strip    = "none"

[profile.release-lto]
inherits = "release"
lto      = "fat"

[profile.release-lto-no-panic]
inherits = "release-lto"
panic    = "abort"

[profile.small]
inherits  = "release-lto-no-panic"
opt-level = "z"

[profile.fast]
inherits  = "dev"
opt-level = 0

[workspace.package]
authors    = ["Braden Steffaniak"]
edition    = "2024"
license    = "MPL-2.0"
repository = "https://github.com/MoosicBox/MoosicBox"

[workspace.dependencies]
# Internal MoosicBox
moosicbox                          = { version = "0.1.1", default-features = false, path = "packages/moosicbox" }
moosicbox_admin_htmx               = { version = "0.1.1", default-features = false, path = "packages/admin_htmx" }
moosicbox_app_client               = { version = "0.1.1", default-features = false, path = "packages/app/tauri/client" }
moosicbox_app_models               = { version = "0.1.1", default-features = false, path = "packages/app/models" }
moosicbox_app_native               = { version = "0.1.1", default-features = false, path = "packages/app/native" }
moosicbox_app_native_bundled       = { version = "0.1.1", default-features = false, path = "packages/app/native/bundled" }
moosicbox_app_native_image         = { version = "0.1.1", default-features = false, path = "packages/app/native/image" }
moosicbox_app_native_ui            = { version = "0.1.1", default-features = false, path = "packages/app/native/ui" }
moosicbox_app_state                = { version = "0.1.1", default-features = false, path = "packages/app/state" }
moosicbox_app_tauri_bundled        = { version = "0.1.1", default-features = false, path = "packages/app/tauri/bundled" }
moosicbox_app_ws                   = { version = "0.1.1", default-features = false, path = "packages/app/tauri/ws" }
moosicbox_arb                      = { version = "0.1.1", default-features = false, path = "packages/arb" }
moosicbox_assert                   = { version = "0.1.1", default-features = false, path = "packages/assert" }
moosicbox_async_service            = { version = "0.1.1", default-features = false, path = "packages/async_service" }
moosicbox_audio_decoder            = { version = "0.1.1", default-features = false, path = "packages/audio_decoder" }
moosicbox_audio_encoder            = { version = "0.1.1", default-features = false, path = "packages/audio_encoder" }
moosicbox_audio_output             = { version = "0.1.1", default-features = false, path = "packages/audio_output" }
moosicbox_audio_zone               = { version = "0.1.1", default-features = false, path = "packages/audio_zone" }
moosicbox_audio_zone_models        = { version = "0.1.1", default-features = false, path = "packages/audio_zone/models" }
moosicbox_auth                     = { version = "0.1.1", default-features = false, path = "packages/auth" }
moosicbox_channel_utils            = { version = "0.1.1", default-features = false, path = "packages/channel_utils" }
moosicbox_config                   = { version = "0.1.1", default-features = false, path = "packages/config" }
moosicbox_date_utils               = { version = "0.1.1", default-features = false, path = "packages/date_utils" }
moosicbox_downloader               = { version = "0.1.1", default-features = false, path = "packages/downloader" }
moosicbox_env_utils                = { version = "0.1.1", default-features = false, path = "packages/env_utils" }
moosicbox_files                    = { version = "0.1.1", default-features = false, path = "packages/files" }
moosicbox_image                    = { version = "0.1.1", default-features = false, path = "packages/image" }
moosicbox_json_utils               = { version = "0.1.1", default-features = false, path = "packages/json_utils" }
moosicbox_library                  = { version = "0.1.1", default-features = false, path = "packages/library" }
moosicbox_library_models           = { version = "0.1.1", default-features = false, path = "packages/library/models" }
moosicbox_library_music_api        = { version = "0.1.1", default-features = false, path = "packages/library/music_api" }
moosicbox_load_balancer            = { version = "0.1.1", default-features = false, path = "packages/load_balancer" }
moosicbox_logging                  = { version = "0.1.1", default-features = false, path = "packages/logging" }
moosicbox_marketing_site           = { version = "0.1.1", default-features = false, path = "packages/marketing_site" }
moosicbox_marketing_site_ui        = { version = "0.1.1", default-features = false, path = "packages/marketing_site/ui" }
moosicbox_menu                     = { version = "0.1.1", default-features = false, path = "packages/menu" }
moosicbox_menu_models              = { version = "0.1.1", default-features = false, path = "packages/menu/models" }
moosicbox_middleware               = { version = "0.1.1", default-features = false, path = "packages/middleware" }
moosicbox_music_api                = { version = "0.1.1", default-features = false, path = "packages/music_api" }
moosicbox_music_api_api            = { version = "0.1.1", default-features = false, path = "packages/music_api/api" }
moosicbox_music_api_helpers        = { version = "0.1.1", default-features = false, path = "packages/music_api/helpers" }
moosicbox_music_api_models         = { version = "0.1.1", default-features = false, path = "packages/music_api/models" }
moosicbox_music_models             = { version = "0.1.1", default-features = false, path = "packages/music/models" }
moosicbox_opus                     = { version = "0.1.1", default-features = false, path = "packages/opus" }
moosicbox_opus_native_libopus      = { version = "0.1.0", default-features = false, path = "packages/opus_native/libopus" }
moosicbox_opus_native_test_vectors = { version = "0.1.0", default-features = false, path = "packages/opus_native/test_vectors" }
moosicbox_paging                   = { version = "0.1.1", default-features = false, path = "packages/paging" }
moosicbox_parsing_utils            = { version = "0.1.1", default-features = false, path = "packages/parsing_utils" }
moosicbox_player                   = { version = "0.1.1", default-features = false, path = "packages/player" }
moosicbox_profiles                 = { version = "0.1.1", default-features = false, path = "packages/profiles" }
moosicbox_qobuz                    = { version = "0.1.1", default-features = false, path = "packages/qobuz" }
moosicbox_remote_library           = { version = "0.1.1", default-features = false, path = "packages/remote_library" }
moosicbox_resampler                = { version = "0.1.1", default-features = false, path = "packages/resampler" }
moosicbox_scan                     = { version = "0.1.1", default-features = false, path = "packages/scan" }
moosicbox_scan_models              = { version = "0.1.1", default-features = false, path = "packages/scan/models" }
moosicbox_schema                   = { version = "0.1.1", default-features = false, path = "packages/schema" }
moosicbox_search                   = { version = "0.1.1", default-features = false, path = "packages/search" }
moosicbox_server                   = { version = "0.1.1", default-features = false, path = "packages/server" }
moosicbox_session                  = { version = "0.1.1", default-features = false, path = "packages/session" }
moosicbox_session_models           = { version = "0.1.1", default-features = false, path = "packages/session/models" }
moosicbox_stream_utils             = { version = "0.1.1", default-features = false, path = "packages/stream_utils" }
moosicbox_tidal                    = { version = "0.1.1", default-features = false, path = "packages/tidal" }
moosicbox_tunnel                   = { version = "0.1.1", default-features = false, path = "packages/tunnel" }
moosicbox_tunnel_sender            = { version = "0.1.1", default-features = false, path = "packages/tunnel_sender" }
moosicbox_web_server               = { version = "0.1.1", default-features = false, path = "packages/web_server" }
moosicbox_web_server_core          = { version = "0.1.1", default-features = false, path = "packages/web_server/core" }
moosicbox_web_server_cors          = { version = "0.1.1", default-features = false, path = "packages/web_server/cors" }
moosicbox_ws                       = { version = "0.1.1", default-features = false, path = "packages/ws" }
moosicbox_yt                       = { version = "0.1.1", default-features = false, path = "packages/yt" }

# Internal Switchy
switchy                     = { version = "0.1.3", default-features = false, path = "packages/switchy" }
switchy_async               = { version = "0.1.3", default-features = false, path = "packages/async" }
switchy_async_macros        = { version = "0.1.3", default-features = false, path = "packages/async/macros" }
switchy_database            = { version = "0.1.3", default-features = false, path = "packages/database" }
switchy_database_connection = { version = "0.1.3", default-features = false, path = "packages/database_connection" }
switchy_env                 = { version = "0.1.0", default-features = false, path = "packages/env" }
switchy_fs                  = { version = "0.1.3", default-features = false, path = "packages/fs" }
switchy_http                = { version = "0.1.3", default-features = false, path = "packages/http" }
switchy_http_models         = { version = "0.1.3", default-features = false, path = "packages/http/models" }
switchy_mdns                = { version = "0.1.3", default-features = false, path = "packages/mdns" }
switchy_p2p                 = { version = "0.1.0", default-features = false, path = "packages/p2p" }
switchy_random              = { version = "0.1.3", default-features = false, path = "packages/random" }
switchy_schema              = { version = "0.1.0", default-features = false, path = "packages/switchy/schema" }
switchy_schema_cli          = { version = "0.1.0", default-features = false, path = "packages/switchy/schema/cli" }
switchy_schema_test_utils   = { version = "0.1.0", default-features = false, path = "packages/switchy/schema/test_utils" }
switchy_tcp                 = { version = "0.1.3", default-features = false, path = "packages/tcp" }
switchy_telemetry           = { version = "0.1.3", default-features = false, path = "packages/telemetry" }
switchy_time                = { version = "0.1.3", default-features = false, path = "packages/time" }
switchy_upnp                = { version = "0.1.3", default-features = false, path = "packages/upnp" }
switchy_uuid                = { version = "0.1.0", default-features = false, path = "packages/uuid" }

# Internal HyperChad
hyperchad                          = { version = "0.1.0", default-features = false, path = "packages/hyperchad" }
hyperchad_actions                  = { version = "0.1.0", default-features = false, path = "packages/hyperchad/actions" }
hyperchad_app                      = { version = "0.1.0", default-features = false, path = "packages/hyperchad/app" }
hyperchad_color                    = { version = "0.1.0", default-features = false, path = "packages/hyperchad/color" }
hyperchad_js_bundler               = { version = "0.1.0", default-features = false, path = "packages/hyperchad/js_bundler" }
hyperchad_markdown                 = { version = "0.1.0", default-features = false, path = "packages/hyperchad/markdown" }
hyperchad_renderer                 = { version = "0.1.0", default-features = false, path = "packages/hyperchad/renderer" }
hyperchad_renderer_egui            = { version = "0.1.0", default-features = false, path = "packages/hyperchad/renderer/egui" }
hyperchad_renderer_fltk            = { version = "0.1.0", default-features = false, path = "packages/hyperchad/renderer/fltk" }
hyperchad_renderer_html            = { version = "0.1.0", default-features = false, path = "packages/hyperchad/renderer/html" }
hyperchad_renderer_html_actix      = { version = "0.1.0", default-features = false, path = "packages/hyperchad/renderer/html/actix" }
hyperchad_renderer_html_cdn        = { version = "0.1.0", default-features = false, path = "packages/hyperchad/renderer/html/cdn" }
hyperchad_renderer_html_http       = { version = "0.1.0", default-features = false, path = "packages/hyperchad/renderer/html/http" }
hyperchad_renderer_html_lambda     = { version = "0.1.0", default-features = false, path = "packages/hyperchad/renderer/html/lambda" }
hyperchad_renderer_html_web_server = { version = "0.1.0", default-features = false, path = "packages/hyperchad/renderer/html/web_server" }
hyperchad_renderer_vanilla_js      = { version = "0.1.0", default-features = false, path = "packages/hyperchad/renderer/vanilla_js" }
hyperchad_renderer_vanilla_js_hash = { version = "0.1.0", default-features = false, path = "packages/hyperchad/renderer/vanilla_js/hash" }
hyperchad_router                   = { version = "0.1.0", default-features = false, path = "packages/hyperchad/router" }
hyperchad_state                    = { version = "0.1.0", default-features = false, path = "packages/hyperchad/state" }
hyperchad_template                 = { version = "0.1.0", default-features = false, path = "packages/hyperchad/template" }
hyperchad_template_actions_dsl     = { version = "0.1.0", default-features = false, path = "packages/hyperchad/template/actions_dsl" }
hyperchad_template_macros          = { version = "0.1.0", default-features = false, path = "packages/hyperchad/template/macros" }
hyperchad_transformer              = { version = "0.1.0", default-features = false, path = "packages/hyperchad/transformer" }
hyperchad_transformer_models       = { version = "0.1.0", default-features = false, path = "packages/hyperchad/transformer/models" }

hyperchad_simulator  = { version = "0.1.0", default-features = false, path = "packages/hyperchad/simulator" }
hyperchad_test_utils = { version = "0.1.0", default-features = false, path = "packages/hyperchad/test_utils" }
web_server_simulator = { version = "0.1.0", default-features = false, path = "packages/web_server/simulator" }

clippier                = { version = "0.1.0", default-features = false, path = "packages/clippier" }
clippier_test_utilities = { version = "0.1.0", default-features = false, path = "packages/clippier/test_utilities" }

# Internal Simvar
simvar         = { version = "0.1.0", default-features = false, path = "packages/simvar" }
simvar_harness = { version = "0.1.0", default-features = false, path = "packages/simvar/harness" }
simvar_utils   = { version = "0.1.0", default-features = false, path = "packages/simvar/utils" }

app-tauri-plugin-player = { version = "0.1.0", default-features = false, path = "packages/app/tauri/tauri-plugin-player" }
openport                = { version = "0.1.1", default-features = false, path = "packages/openport" }

# Internal gpipe
gpipe     = { version = "0.1.0", default-features = false, path = "packages/gpipe" }
gpipe_ast = { version = "0.1.0", default-features = false, path = "packages/gpipe/ast" }

actix = "0.13.5"
actix-cors = "0.7.1"
actix-files = "0.6.8"
actix-htmx = "0.3.2"
actix-http = "3.11.2"
actix-rt = "2.11.0"
actix-service = "2.0.3"
actix-test = "0.1.5"
actix-web = "4.11.0"
actix-web-opentelemetry = { version = "0.22.0", features = [
    "metrics",
    "metrics-prometheus",
    "prometheus",
] }
actix-ws = "0.3.0"
anyhow = "1.0.100"
arrayvec = "0.7.6"
assert_cmd = "2.1.1"
async-recursion = "1.1.1"
async-trait = "0.1.89"
atomic_float = "1.1.0"
audiopus = "0.2.0"
aws-config = "1.8.8"
aws-sdk-apigatewaymanagement = "1.87.0"
aws-sdk-ssm = "1.97.0"
base64 = "0.22.1"
btparse = "0.2.0"
bumpalo = "3.19.0"
bytes = "1.10.1"
bytesize = "2.1.0"
cargo_metadata = "0.23.0"
chrono = { version = "0.4.42", default-features = false, features = [
    "clock",
    "serde",
] }
clap = { version = "4.5.51", features = ["derive"] }
cmake = "0.1.54"
color-backtrace = { version = "0.7.2", default-features = false, features = [
    "use-btparse-crate",
] }
color-hex = "0.2.0"
colored = { version = "3.0.0" }
console-subscriber = "0.4.1"
const-hex = "1.17.0"
const_format = "0.2.35"
convert_case = "0.8.0"
cpal = "0.16.0"
ctrlc = "3.5.1"
deadpool-postgres = "0.14.1"
debounce = "0.2.2"
dialoguer = "0.12.0"
eframe = { version = "0.33.0", default-features = false }
egui = { version = "0.33.0", default-features = false }
egui_extras = { version = "0.33.0", default-features = false }
enum-as-inner = "0.6.1"
env_logger = "0.11.8"
fdk-aac = "0.8.0"
flacenc = "0.5.0"
flate2 = "1.1.5"
fltk = "1.5.20"
flume = "0.11.1"
free_log_client = { version = "0.5.0", default-features = false }
futures = "0.3.31"
futures-channel = "0.3.31"
futures-core = "0.3.31"
futures-util = { version = "0.3.31", default-features = false, features = [
    "std",
] }
getrandom = "0.3.4"
gh-emoji = { version = "1.0.8", default-features = false }
git2 = "0.20.2"
glob = "0.3.3"
globset = { version = "0.4.18", default-features = false }
hex = "0.4.3"
home = "0.5.12"
hostname = "0.4.1"
html-escape = "0.2.13"
http = "1.3.1"
id3 = "1.16.3"
image = "0.25.8"
include_dir = "0.7.4"
insta = "1.43.2"
itertools = "0.14.0"
itoa = "1.0.15"
json5 = { version = "0.4.1", default-features = false }
kanal = "0.1.1"
lambda_http = "0.17.0"
lambda_runtime = "0.14.4"
libvips = { version = "1.7.1" }
local-ip-address = "0.6.5"
log = { version = "0.4.28", features = ["release_max_level_trace"] }
maud = "0.27.0"
md5 = "0.8.0"
mdns-sd = "0.16.0"
mime_guess = "2.0.5"
mime_multipart = { version = "0.6.1", default-features = false }
moosicbox_audiotags = { version = "0.1.0" }
moosicbox_lofty = { version = "0.1.0" }
mp3-duration = "0.1.10"
mp3lame-encoder = "0.2.1"
mysql = { version = "26.0.1", features = [
    "default-rustls",
    "rustls-tls",
], default-features = false }
nanoid = "0.4.0"
native-tls = "0.2.14"
net2 = "0.2.39"
ogg = "0.9.2"
oneshot = "0.1.11"
open = "5.3.2"
openssl = { version = "0.10.74", features = ["v110"] }
opentelemetry = { version = "0.31.0", features = ["trace"] }
opentelemetry-otlp = { version = "0.31.0", features = ["tonic"] }
opentelemetry_sdk = { version = "0.31.0", features = ["rt-tokio"] }
opus = "0.3.0"
os_info = { version = "3.12.0", default-features = false }
paste = "1.0.15"
pin-project = "1.1.10"
pin-project-lite = "0.2.16"
pin-utils = "0.1.0"
pingora = "0.6.0"
pingora-core = "0.6.0"
pingora-http = "0.6.0"
pingora-load-balancing = "0.6.0"
pingora-proxy = "0.6.0"
postgres-native-tls = "0.5.2"
postgres-openssl = "0.5.2"
postgres-protocol = "0.6.9"
predicates = "3.1.3"
pretty_assertions = "1.4.1"
pretty_env_logger = "0.5.0"
proc-macro2 = "1.0.103"
proc-macro2-diagnostics = { version = "0.10.1", default-features = false }
profiling = "1.0.17"
puffin = "0.19.1"
puffin_http = "0.16.1"
pulldown-cmark = { version = "0.13.0", default-features = false }
qstring = "0.7.2"
quickcheck = "1.0.3"
quickcheck_macros = "1.1.0"
quote = "1.0.41"
rand = "0.9.2"
rangemap = "1.6.0"
ratatui = "0.29.0"
rb = "0.4.1"
rcgen = "0.14.5"
regex = "1.12.2"
reqwest = { version = "0.12.24", default-features = false, features = [
    "rustls-tls",
    "stream",
] }
roxmltree = "0.21.1"
rubato = "=0.12.0"
rupnp = { version = "3.0.0", features = ["full_device_spec"] }
rusqlite = { version = "=0.32.1", features = ["bundled"] }
rust-embed = "8.8.0"
rust_decimal = { version = "1.39.0", default-features = false }
rust_decimal_macros = { version = "1.39.0", default-features = false }
rustc_version = "0.4.1"
ryu = "1.0.20"
scoped-tls = "1.0.1"
serde = { version = "1.0.228", features = ["derive"] }
serde-aux = "4.7.0"
serde-querystring = "0.3.0"
serde_json = "1.0.145"
serde_urlencoded = "0.7.1"
serde_with = { version = "3.15.1", default-features = false }
serde_yaml = "0.9.34"
serial_test = "3.2.0"
sha2 = "0.10.9"
sha2-const-stable = "0.1.0"
shell-words = "1.1.0"
sqlx = { version = "0.8.6", default-features = false, features = [
    "chrono",
    "runtime-tokio",
] }
sqlx-mysql = { version = "0.8.6", default-features = false, features = [
    "chrono",
] }
sqlx-postgres = { version = "0.8.6", default-features = false, features = [
    "chrono",
] }
static_init = "1.0.4"
strum = "0.27.2"
strum_macros = "0.27.2"
swc_bundler = "34.0.0"
swc_common = { version = "16.0.0", features = ["tty-emitter"] }
swc_ecma_ast = "17.0.0"
swc_ecma_codegen = "19.0.0"
swc_ecma_loader = { version = "16.0.0", features = ["cache", "node"] }
swc_ecma_minifier = "35.0.0"
swc_ecma_parser = "26.0.1"
swc_ecma_transforms_base = "29.0.0"
swc_ecma_transforms_typescript = "32.0.0"
swc_ecma_visit = "17.0.0"
symphonia = { version = "0.5.5", features = ["all"] }
syn = "2.0.108"
syntect = "5.3.0"
tantivy = "0.25.0"
tauri = { version = "2.9.2", features = ["protocol-asset"] }
tauri-build = { version = "2.5.1", features = [] }
tauri-plugin = { version = "2.5.1", features = ["build"] }
tauri-plugin-dialog = "2.4.2"
tauri-plugin-fs = "2.4.4"
tauri-plugin-log = "2.7.1"
tauri-plugin-notification = "2.3.3"
tempfile = "3.23.0"
test-case = "3.3.1"
test-log = "0.2.18"
thiserror = "2.0.17"
throttle = "0.1.0"
tl = "0.7.8"
tokio = { version = "1.48.0" }
tokio-postgres = { version = "0.7.15", features = [
    "with-chrono-0_4",
    "with-uuid-1",
] }
tokio-stream = "0.1.17"
tokio-test = "0.4.4"
tokio-tungstenite = { version = "0.28.0", features = [
    "rustls-tls-webpki-roots",
] }
tokio-util = "0.7.16"
toml = "0.9.8"
tracing = "0.1.41"
tracing-opentelemetry = { version = "0.32.0" }
tracing-subscriber = "0.3.20"
tracy-client = { version = "0.18.2", default-features = false }
trybuild = "1.0.113"
turso = "0.2.2"
uaparser = "0.6.4"
url = "2.5.7"
urlencoding = "2.1.3"
utoipa = { version = "5.4.0", features = ["actix_extras"] }
utoipa-rapidoc = { version = "6.0.0", features = ["actix-web"] }
utoipa-redoc = { version = "6.0.0", features = ["actix-web"] }
utoipa-scalar = { version = "0.3.0", features = ["actix-web"] }
utoipa-swagger-ui = { version = "9.0.2", features = ["actix-web"] }
uuid = { version = "1.18.1", features = ["v4"] }
walkdir = "2.5.0"
webp = "0.3.1"
whoami = "1.6.1"
xml = "1.1.0"

[patch.crates-io]
flacenc = { git = "https://github.com/BSteffaniak/flacenc-rs", branch = "unpin-built-version" }
# actix-files             = { git = "https://github.com/actix/actix-web" }
# actix-http              = { git = "https://github.com/actix/actix-web" }
# actix-http-test         = { git = "https://github.com/actix/actix-web" }
# actix-multipart         = { git = "https://github.com/actix/actix-web" }
# actix-multipart-derive  = { git = "https://github.com/actix/actix-web" }
# actix-router            = { git = "https://github.com/actix/actix-web" }
# actix-test              = { git = "https://github.com/actix/actix-web" }
# actix-web               = { git = "https://github.com/actix/actix-web" }
# actix-web-actors        = { git = "https://github.com/actix/actix-web" }
# actix-web-codegen       = { git = "https://github.com/actix/actix-web" }
# actix-web-opentelemetry = { git = "https://github.com/open-telemetry/opentelemetry-rust-contrib" }
# eframe                  = { git = "https://github.com/BSteffaniak/egui" }
# egui                    = { git = "https://github.com/BSteffaniak/egui" }
# egui_extras             = { git = "https://github.com/BSteffaniak/egui" }
# notify-rust             = { git = "https://github.com/hoodie/notify-rust" }
# opentelemetry           = { git = "https://github.com/open-telemetry/opentelemetry-rust" }
# opentelemetry-otlp      = { git = "https://github.com/open-telemetry/opentelemetry-rust" }
# opentelemetry_sdk       = { git = "https://github.com/open-telemetry/opentelemetry-rust" }
# pingora                 = { git = "https://github.com/cloudflare/pingora" }
# pingora-core            = { git = "https://github.com/cloudflare/pingora" }
# pingora-http            = { git = "https://github.com/cloudflare/pingora" }
# pingora-load-balancing  = { git = "https://github.com/cloudflare/pingora" }
# pingora-proxy           = { git = "https://github.com/cloudflare/pingora" }
# tracing-opentelemetry   = { git = "https://github.com/tokio-rs/tracing-opentelemetry" }
# utoipa                  = { git = "https://github.com/juhaku/utoipa" }
# utoipa-rapidoc          = { git = "https://github.com/juhaku/utoipa" }
# utoipa-redoc            = { git = "https://github.com/juhaku/utoipa" }
# utoipa-scalar           = { git = "https://github.com/juhaku/utoipa" }
# utoipa-swagger-ui       = { git = "https://github.com/juhaku/utoipa" }
