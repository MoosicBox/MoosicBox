name: Bloaty

on:
    # push:
    #     branches: ['master']
    #     paths:
    #         - packages/**
    #         - '**/*.toml'
    #         - '**/Cargo.lock'
    #         - .github/workflows/bloaty.yml
    #         - '!packages/marketing_site/*.ts'
    #         - '!packages/marketing_site/*.json'
    #         - '!packages/marketing_site/pnpm-lock.yaml'
    #         - '!packages/marketing_site/*.mjs'
    #         - '!packages/marketing_site/*.js'
    #         - '!packages/marketing_site/*.md'
    #         - '!packages/marketing_site/.prettierignore'
    #         - '!packages/marketing_site/hyperchad/**'
    #         - '!packages/marketing_site/infra/**'
    #         - '!packages/hyperchad/renderer/vanilla_js/web/**'
    #         - '!**/*.nix'
    #         - '!**/Dockerfile'
    #         - '!**/*.Dockerfile'
    #         - '!**/*.dockerignore'
    workflow_dispatch:

env:
    CARGO_TERM_COLOR: always

jobs:
    build-matrix:
        name: Build matrix

        strategy:
            fail-fast: true

            matrix:
                os: ['ubuntu-latest']

        runs-on: ${{ matrix.os }}

        outputs:
            matrix: ${{ steps.build-matrix-step.outputs.matrix }}

        steps:
            - uses: dtolnay/rust-toolchain@stable

            - name: Checkout
              if: ${{ matrix.os == 'ubuntu-latest' }}
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Build matrix JSON
              if: ${{ matrix.os == 'ubuntu-latest' }}
              id: build-matrix-step
              run: |
                  MATRIX=$(
                      cargo run -p clippier \
                          features \
                          . \
                          -o json \
                          | jq -rc \
                              '[
                                  .[]
                                  | {
                                      "name": (.name | sub("^(moosicbox|switchy|hyperchad)_"; "")),
                                      "path": (.path),
                                      "features": (.features),
                                      "requiredFeatures": (if .requiredFeatures != null then .requiredFeatures | join(",") else null end),
                                      "os": (.os + "-latest"),
                                      "dependencies": (.dependencies),
                                      "toolchains": (.toolchains),
                                      "ciSteps": (.ciSteps),
                                      "ciToolchains": (.ciToolchains),
                                      "env": (if .env != null then .env | gsub("\n";" ") else null end)
                                  }
                                  | del(.. | nulls)
                              ]'
                  )
                  echo "Using matrix (raw):"
                  echo $MATRIX
                  echo "Using matrix:"
                  echo $MATRIX | jq
                  echo 'matrix<<EOF' >> $GITHUB_OUTPUT
                  echo $MATRIX >> $GITHUB_OUTPUT
                  echo 'EOF' >> $GITHUB_OUTPUT

    bloaty:
        runs-on: ${{ matrix.package.os }}

        needs: build-matrix

        strategy:
            fail-fast: false

            matrix:
                package: ${{ fromJson(needs.build-matrix.outputs.matrix) }}

        steps:
            - uses: actions/checkout@v4

            - uses: dtolnay/rust-toolchain@stable
              with:
                  components: llvm-tools-preview

            - name: Install cargo-bloat
              run: |
                  cargo install cargo-bloat

            - name: Install cargo-binutils
              run: |
                  cargo install cargo-binutils

            - name: Setup CI
              if: ${{ matrix.package.ciSteps }}
              run: ${{ matrix.package.ciSteps }}

            - uses: pnpm/action-setup@v3
              if: ${{ contains(matrix.package.toolchains, 'pnpm') || contains(matrix.package.ciToolchains, 'pnpm') }}
              name: Install pnpm
              with:
                  version: latest
                  run_install: false

            - uses: actions/setup-node@v4
              if: ${{ contains(matrix.package.toolchains, 'node') || contains(matrix.package.ciToolchains, 'node') }}
              name: Install node
              with:
                  node-version: latest

            - name: Setup cmake
              uses: jwlawson/actions-setup-cmake@v2
              with:
                  cmake-version: '3.x'

            - name: Install dependencies
              if: ${{ matrix.package.dependencies }}
              shell: bash
              run: ${{ matrix.package.dependencies }}

            - name: Run bloaty ${{ matrix.package.name }}
              shell: bash
              run: |
                  ${{ matrix.package.env }} cargo run -p bloaty -- \
                        --skip-features fail-on-warnings,default \
                        --skip-feature-pattern '_.+' \
                        --output-format all \
                        --report-file report

            - name: Upload reports
              uses: actions/upload-artifact@v4
              if: always()
              with:
                  name: reports
                  path: report.*
                  if-no-files-found: warn
                  retention-days: 90
