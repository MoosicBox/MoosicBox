name: SST Tunnel Service

on:
    workflow_dispatch:
        inputs:
            stage:
                description: 'Stage'
                required: false
                default: 'prod'
            remove:
                description: 'SST Remove'
                required: false
                default: 'false'
            deploy:
                description: 'SST Deploy'
                required: false
                default: 'true'
            extra_clusters:
                description: 'Extra Clusters'
                required: false
                default: ''
            ssl:
                description: 'SSL'
                required: false
                default: 'true'
            force:
                description: 'K8S Patch Force'
                required: false
                default: 'false'
            refresh:
                description: 'Pulumi refresh'
                required: false
                default: 'false'
            unlock:
                description: 'SST unlock'
                required: false
                default: 'false'
            delete_unreachable:
                description: 'K8S Delete Unreachable'
                required: false
                default: 'false'

env:
    CARGO_TERM_COLOR: always

jobs:
    run-sst:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - uses: dtolnay/rust-toolchain@stable

            - uses: pnpm/action-setup@v3
              name: Install pnpm
              with:
                  version: 9
                  run_install: false

            - name: Install SST
              shell: bash
              env:
                  DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
                  PULUMI_K8S_DELETE_UNREACHABLE: ${{ github.event.inputs.delete_unreachable }}
              run: |
                  pnpm install
                  pnpm sst install --verbose --print-logs

            - name: Unlock
              if: ${{ github.event.inputs.unlock == 'true' }}
              shell: bash
              env:
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  AWS_REGION: us-east-1
                  DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
                  PULUMI_K8S_DELETE_UNREACHABLE: ${{ github.event.inputs.delete_unreachable }}
              run: |
                  pnpm sst unlock --stage ${{ github.event.inputs.stage }} --verbose --print-logs

            - name: Refresh
              if: ${{ github.event.inputs.refresh == 'true' }}
              shell: bash
              env:
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  AWS_REGION: us-east-1
                  DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
                  PULUMI_K8S_DELETE_UNREACHABLE: ${{ github.event.inputs.delete_unreachable }}
              run: |
                  pnpm sst refresh --stage ${{ github.event.inputs.stage }} --verbose --print-logs

            - name: Remove
              if: ${{ github.event.inputs.remove == 'true' }}
              shell: bash
              env:
                  DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  AWS_REGION: us-east-1
                  PULUMI_K8S_ENABLE_PATCH_FORCE: ${{ github.event.inputs.force }}
                  PULUMI_K8S_DELETE_UNREACHABLE: ${{ github.event.inputs.delete_unreachable }}
                  EXTRA_CLUSTERS: ${{ github.event.inputs.extra_clusters }}
                  LOAD_BALANCER_USE_SSL: ${{ github.event.inputs.ssl }}
              run: |
                  pnpm sst remove --stage ${{ github.event.inputs.stage }} --verbose --print-logs

            - name: Deploy
              if: ${{ github.event.inputs.deploy == 'true' }}
              shell: bash
              env:
                  DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  AWS_REGION: us-east-1
                  PULUMI_K8S_ENABLE_PATCH_FORCE: ${{ github.event.inputs.force }}
                  PULUMI_K8S_DELETE_UNREACHABLE: ${{ github.event.inputs.delete_unreachable }}
                  EXTRA_CLUSTERS: ${{ github.event.inputs.extra_clusters }}
                  LOAD_BALANCER_USE_SSL: ${{ github.event.inputs.ssl }}
              run: |
                  pnpm sst deploy --stage ${{ github.event.inputs.stage }} --verbose --print-logs

            - name: Upload log
              uses: actions/upload-artifact@v4
              if: always()
              with:
                  name: log
                  path: .sst/log
                  retention-days: 90
